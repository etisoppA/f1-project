/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Alexc
 */
public class playersFrame extends javax.swing.JFrame {

    /**
     * Creates new form playersFrame
     */
    public playersFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        playersPane = new javax.swing.JScrollPane();
        playersFrameTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        playersFrameTable.setBackground(new java.awt.Color(13, 17, 59));
        playersFrameTable.setForeground(new java.awt.Color(255, 255, 255));
        playersFrameTable.setModel(new javax.swing.table.DefaultTableModel(
                new String [][] {
                        {"Lewis Hamilton", "36", "Mercedes", "100"},
                        {"Sebastian Vettel", "34", "Aston Martin", "53"},
                        {"Fernando Alonso", "40", "Alpine", "32"},
                        {"Kimi Räikkönen", "41", "Alfa Romeo Racing", "21"},
                        {"Max Verstappen", "23", "Red Bull Racing", "19"},
                        {"Valtteri Bottas", "32", "Mercedes", "9"},
                        {"Daniel Ricciardo", "32", "McLaren", "7"},
                        {"Sergio Perez", "31", "Red Bull Racing", "3"},
                        {"Carlos Sainz Jr.", "27", "Ferrari", "3"},
                        {"Charles Leclerc", "24", "Ferrari", "2"},
                        {"Esteban Ocon", "25", "Alpine", "1"},
                        {"Pierre Gasly", "25", "AlphaTauri", "1"},
                        {"Robert Kubica", "36", "Alfa Romeo Racing", "1"},
                        {"Kevin Magnussen", "29", "Haas", "1"},
                        {"Lance Stroll", "23", "Aston Martin", "0"},
                        {"George Russell", "23", "Williams", "0"},
                        {"Nicholas Latifi", "26", "Williams", "0"},
                        {"Mick Schumacher", "22", "Haas", "0"},
                        {"Nikita Mazepin", "22", "Haas", "0"},
                        {"Alexander Albon", "25", "Williams", "0"},
                        {"Yuki Tsunoda", "21", "AlphaTauri", "0"},
                        {"Valtteri Bottas", "32", "Alfa Romeo Racing", "0"},
                        {"Juan Manuel Correa", "22", "Alfa Romeo Racing", "0"},
                        {"Nico Hülkenberg", "34", "Free Agent", "0"},
                        {"Stoffel Vandoorne", "29", "Free Agent", "0"},
                        {"Nyck de Vries", "26", "Free Agent", "0"},
                        {"Callum Ilott", "23", "Free Agent", "0"},
                        {"Robert Shwartzman", "22", "Free Agent", "0"},
                        {"Roy Nissany", "26", "Free Agent", "0"},
                        {"Jack Aitken", "26", "Free Agent", "0"},
                        {"Guan Yu Zhou", "22", "Free Agent", "0"},
                        {"Daniil Kvyat", "27", "Free Agent", "0"},
                        {"Nico Rosberg", "36", "Free Agent", "0"},
                        {"Jolyon Palmer", "30", "Free Agent", "0"},
                        {"Marcus Ericsson", "31", "Free Agent", "0"},
                        {"Esteban Gutiérrez", "30", "Free Agent", "0"},
                        {"Paul di Resta", "35", "Free Agent", "0"},
                        {"Kamui Kobayashi", "35", "Free Agent", "0"},
                        {"Will Stevens", "30", "Free Agent", "0"},
                        {"Roberto Merhi", "30", "Free Agent", "0"},
                        {"Jean-Éric Vergne", "31", "Free Agent", "0"},
                        {"Sébastien Buemi", "33", "Free Agent", "0"},
                        {"Brendon Hartley", "31", "Free Agent", "0"},
                        {"Pascal Wehrlein", "26", "Free Agent", "0"},
                        {"Adrian Sutil", "38", "Free Agent", "0"},
                        {"Kazuki Nakajima", "36", "Free Agent", "0"},
                        {"Vitaly Petrov", "37", "Free Agent", "0"},
                        {"Esteban Gutiérrez", "30", "Free Agent", "0"},
                        {"Nelson Piquet Jr.", "36", "Free Agent", "0"},
                        {"Takuma Sato", "44", "Free Agent", "0"},
                        {"Narain Karthikeyan", "44", "Free Agent", "0"},
                        {"Pastor Maldonado", "36", "Free Agent", "0"},
                        {"Marcus Armstrong", "20", "Free Agent", "0"}
                },
                new String [] {
                        "Name", "Age", "Team", "Career Wins"
                }
        ));
        playersFrameTable.setGridColor(new java.awt.Color(235, 235, 235));
        playersPane.setViewportView(playersFrameTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(playersPane, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(playersPane, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    /*
     * @param args the command line arguments
     */
   /*public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(playersFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(playersFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(playersFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(playersFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new playersFrame().setVisible(true);
            }
        });
    } */

    public static void run() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(playersFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(playersFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(playersFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(playersFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new playersFrame().setVisible(true);
            }
        });

    }


    // Variables declaration - do not modify
    private javax.swing.JTable playersFrameTable;
    private javax.swing.JScrollPane playersPane;
    // End of variables declaration
}
